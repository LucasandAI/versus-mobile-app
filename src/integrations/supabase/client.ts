// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import { Preferences } from '@capacitor/preferences';
import type { Database } from './types';

const SUPABASE_URL = "https://goxpejofxjvcilfoyrxs.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdveHBlam9meGp2Y2lsZm95cnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDUzNDc0NDgsImV4cCI6MjA2MDkyMzQ0OH0.Giew8VRVChAks1ooUc3N3oTbMDjFVTzGnr9IExIirYs";

// Custom storage adapter for Capacitor
const capacitorStorage = {
  async getItem(key: string) {
    const { value } = await Preferences.get({ key });
    return value;
  },
  async setItem(key: string, value: string) {
    await Preferences.set({ key, value });
  },
  async removeItem(key: string) {
    await Preferences.remove({ key });
  },
};

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: capacitorStorage,
  },
});

// Ensure storage bucket exists on client init
const initStorage = async () => {
  try {
    // Check if the club-logos bucket exists
    const { data: buckets } = await supabase.storage.listBuckets();
    const bucketExists = buckets?.some(bucket => bucket.name === 'club-logos');
    
    if (!bucketExists) {
      // Create the bucket if it doesn't exist
      const { error } = await supabase.storage.createBucket('club-logos', {
        public: true,
        fileSizeLimit: 10485760 // 10MB
      });
      
      if (error) {
        console.error('[Supabase] Error creating club-logos bucket:', error);
      } else {
        console.log('[Supabase] Created club-logos bucket');
      }
    }
  } catch (e) {
    console.error('[Supabase] Storage init error:', e);
  }
};

// Initialize storage when the client is loaded
initStorage();
